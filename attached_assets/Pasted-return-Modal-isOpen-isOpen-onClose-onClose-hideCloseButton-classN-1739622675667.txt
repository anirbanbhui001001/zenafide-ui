return (
    <Modal
      isOpen={isOpen}
      onClose={onClose}
      hideCloseButton
      classNames={{
        wrapper: '!items-start !justify-end',
        base: '!m-0 rounded-medium h-[calc(100vh-64px)] w-full sm:w-[600px] ',
        backdrop: 'hidden',
      }}
      motionProps={{
        variants: {
          enter: {
            x: 0,
            transition: {
              duration: 0.3,
            },
          },
          exit: {
            x: 600,
            transition: {
              duration: 0.2,
              ease: 'easeIn',
            },
          },
        },
      }}
    >
      <ModalContent className="absolute top-2 right-2 h-[calc(100vh-20px)]">
        {(onClose) => (
          <>
            <ModalHeader className="flex justify-between items-center  px-4 py-2 border-b">
              <span className="text-large">
                {user
                  ? `Edit ${user.first_name} ${user.last_name} (User id: ${user.id}) `
                  : 'Create User'}
              </span>
              <Button isIconOnly variant="light" onPress={onClose}>
                <Icon icon="mdi:close" className="h-5 w-5" />
              </Button>
            </ModalHeader>
            <ModalBody className="overflow-hidden mt-2">
              <Tabs
                aria-label="User Details"
                fullWidth
                onSelectionChange={(key) => setActiveTab(key.toString())}
              >
                {tabs.map((tab) => (
                  <Tab key={tab.id} title={tab.label}>
                    <ScrollShadow className="h-[calc(100vh-250px)]">
                      {tab.content}
                    </ScrollShadow>
                  </Tab>
                ))}
              </Tabs>
            </ModalBody>
            <ModalFooter>
              <Button
                className="w-[80%]"
                color="primary"
                onClick={
                  activeTab === 'basic'
                    ? handleSubmit(onSubmitWrapper)
                    : handlePermissionsSubmit
                }
                isLoading={
                  activeTab === 'basic' ? isLoading : isUpdatingPermissions
                }
              >
                Save
              </Button>
              <Button variant="light" onPress={onClose}>
                Cancel
              </Button>
            </ModalFooter>
          </>
        )}
      </ModalContent>
    </Modal>
  );
};