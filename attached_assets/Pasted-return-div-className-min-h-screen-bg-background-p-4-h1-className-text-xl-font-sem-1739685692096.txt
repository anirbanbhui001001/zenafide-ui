return (
    <div className="min-h-screen bg-background p-4 ">
      <h1 className="text-xl font-semibold">
        {promptSlug ? 'Edit Prompt' : 'Create Prompt'}
      </h1>
      <Header
        agent={agent}
        setAgent={setAgent}
        isCreateLoading={isPromptSaving}
        handleSave={() => handleSave()}
        isRunLoading={isRunLoading}
        handleRun={handleRun}
        setIsSettingsOpen={setIsSettingsOpen}
        posts={posts}
        resetStates={resetStates}
        refetchPrompt={refetchPromptById}
      />
      {/* Main Content */}
      <div className="flex h-[calc(100vh-8rem)] relative">
        {/* Left Panel */}
        <Resizable
          width={leftPanelWidth}
          height={0}
          onResize={onResize}
          handle={
            <div className="absolute right-0 top-0 bottom-0 w-1 cursor-col-resize hover:bg-primary-300 z-10" />
          }
          resizeHandles={['e']}
        >
          <div
            style={{ width: leftPanelWidth }}
            className="py-4 pr-4 border-r border-divider overflow-y-auto !min-h-[200px]"
          >
           
            <PromptEditor
              initialContent={agent.prompt}
              onContentChange={(value, variables) => {
                console.log(agent.id, 'inside change');
                const processedVariables = Object.fromEntries(
                  Object.entries(variables).map(([key, value]) => [
                    key,
                    // Strip HTML tags from variable values
                    value.replace(/<[^>]*>/g, '').trim(),
                  ])
                );
                setAgent((prev) => ({
                  ...prev,
                  prompt: value,
                  text_variables: processedVariables,
                }));
                console.log(processedVariables);
              }}
              variables={agent?.text_variables || {}}
            />
            <ListPosts
              posts={posts}
              setPosts={setPosts}
              showValidation={showValidation}
              addMessagePair={addMessagePair}
              promptId={Number(agent.id)}
            />
          </div>
        </Resizable>

        {/* Right Panel - Preview */}
        <div
          style={{ width: `calc(100% - ${leftPanelWidth}px)` }}
          className="bg-default-50 p-4"
        >
          <PreviewResponse
            isRunLoading={isRunLoading}
            generatedResponse={generatedResponse}
            addingToConversation={addingToConversation}
            promptData={promptData}
            posts={posts}
            setPosts={setPosts}
            refetchPosts={refetchPosts}
            addToConversationMutation={addToConversationMutation}
          />
        </div>
      </div>
      <ModalSettings
        isOpen={isSettingsOpen}
        onClose={() => setIsSettingsOpen(false)}
        settings={modelSettings}
        onSettingsChange={setModelSettings}
        handleSave={handleSave}
        isLoading={isPromptSaving}
      />
    }
    </div>
  );