import { Icon } from '@iconify/react'; // Use Icon from @iconify/react
import {
  Button,
  Input,
  Modal,
  ModalBody,
  ModalContent,
  ModalFooter,
  ModalHeader,
  Select,
  SelectItem,
  SelectSection,
} from '@nextui-org/react';
import { useState } from 'react';
import { useCreateOrUpdateAccessKey } from '../../hooks/queries/access-keys'; // Import the hook
import { useEnumByName } from '../../hooks/queries/common'; // Import the useEnums hook

interface ConfigureApiKeyModalProps {
  isOpen: boolean;
  onClose: () => void;
  provider: any;
}

export default function ConfigureApiKeyModal({
  isOpen,
  onClose,
  provider,
}: ConfigureApiKeyModalProps) {
  const [isPasswordVisible, setIsPasswordVisible] = useState(false);
  const [accessKey, setAccessKey] = useState(provider?.plain_key);
  const [providerName, setProviderName] = useState(provider?.name);
  const isEdit = provider?.id;
  const { mutate: saveAccessKey } = useCreateOrUpdateAccessKey({
    onSuccess: () => {
      onClose();
    },
    successMessage: 'API key saved successfully',
  });
  const { data: providers } = useEnumByName('settings:provider');

  const handleSave = () => {
    saveAccessKey({
      id: provider?.id,
      data: {
        name: providerName,
        // description: 'string',
        key: accessKey,
      },
    });
  };

  const handleProviderChange = (keys: Selection) => {
    const selected = Array.from(keys)[0] as string;
    setProviderName(selected);
  };

  return (
    <Modal isOpen={isOpen} onClose={onClose}>
      <ModalContent>
        <ModalHeader className="text-medium">
          {isEdit ? `Configure ${provider.name}` : 'Create New Provider'}
        </ModalHeader>
        <ModalBody>
          <div className="space-y-4">
            <Select
              label="Provider"
              selectedKeys={providerName ? [providerName] : []}
              onSelectionChange={handleProviderChange}
            >
              <SelectSection>
                {providers &&
                  Object.keys(providers).map((provider) => (
                    <SelectItem key={provider}>{provider}</SelectItem>
                  ))}
              </SelectSection>
            </Select>

            <div>
              <span className="text-small">API key</span>
              <Input
                type={isPasswordVisible ? 'text' : 'password'}
                placeholder="Enter secret"
                value={accessKey}
                onValueChange={setAccessKey}
                endContent={
                  <button
                    onClick={() => setIsPasswordVisible(!isPasswordVisible)}
                    className="ml-2"
                    aria-label="Toggle password visibility"
                  >
                    <Icon
                      icon={isPasswordVisible ? 'mdi:eye-off' : 'mdi:eye'}
                      width="20"
                    />
                  </button>
                }
              />
              <p className="text-xs text-default-400 mt-4">
                This secret will be encrypted at rest using Transparent Data
                Encryption with a unique 256-bit key and nonce.
              </p>
            </div>
          </div>
        </ModalBody>
        <ModalFooter>
          <Button color="primary" size="sm" onPress={handleSave}>
            Save
          </Button>
        </ModalFooter>
      </ModalContent>
    </Modal>
  );
}
